{"version":3,"sources":["components/SearchBar/SearchYear/SearchYear.jsx","components/SearchBar/SearchType/SearchType.jsx","components/SearchBar/SearchBar.jsx","components/SearchResult/LoadMore/LoadMore.jsx","components/SearchResult/MovieList/MovieItem/MovieItem.jsx","components/SearchResult/MovieList/MovieList.jsx","components/SearchResult/WatchListSideBar/WatchListSideBar.jsx","components/SearchResult/MovieDetail/AddToWatchList/AddToWatchList.jsx","components/SearchResult/MovieDetail/MovieDetail.jsx","components/SearchResult/SearchResult.jsx","pages/HomePage/HomePage.jsx","pages/WatchList/WatchListPage.jsx","components/Header/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["RangeSlider","withStyles","root","color","height","thumb","width","backgroundColor","border","marginTop","marginLeft","boxShadow","active","track","borderRadius","rail","Slider","SelectYear","props","YEAR_END","Date","getFullYear","React","useState","yearRange","setYearRange","className","Row","Col","xs","name","value","min","max","valueLabelDisplay","defaultValue","onChange","e","data","onChangeCommitted","getAriaLabel","index","useStyles","makeStyles","padding","SelectType","type","classes","FormControl","component","RadioGroup","row","FormControlLabel","control","Radio","label","SearchBar","search","keyword","year","onClearKeyword","onChangeYear","onChangeType","onChangeSearch","Container","InputGroup","size","Text","id","placeholder","aria-label","aria-describedby","onClick","LoadMore","loadMoreFn","Button","variant","MovieItem","title","imgURL","md","xl","src","alt","MovieList","startY","endY","totalResults","movies","onSelect","loadMoreMovies","hasMore","selectId","toUpperCase","length","dataLength","next","loader","endMessage","style","textAlign","map","Title","Year","Type","Poster","imdbID","WatchListSideBar","listData","placement","show","setShow","Offcanvas","onHide","Header","closeButton","Body","AddToWatchList","onWatchList","MovieDetail","info","Rated","Runtime","Actors","Genre","Plot","Ratings","basic","collection","setCollection","watchList","setWatchList","useEffect","includes","sm","prevValue","prev","filter","item","console","log","Value","Source","SearchResult","imdb","setImdb","setSelectId","movieInfo","setMovieInfo","detailURL","getMovieDetail","a","fetch","response","json","error","toString","HomePage","setMovies","setTotalResults","displayCurrentYear","clearTag","setClearTag","page","setSearch","setHasMore","listURL","Response","Search","handleResult","result","concat","getMovies","handleChangeSearch","event","target","WatchListPage","to","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a4466e0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./SearchYear.styles.scss\";\nimport { Slider } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Row, Col } from \"react-bootstrap\";\n\n// custom slider style and color\nconst RangeSlider = withStyles({\n  root: {\n    color: \"grey\",\n    height: 6,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: \"#fff\",\n    border: \"2px solid currentColor\",\n    marginTop: -8,\n    marginLeft: -12,\n    \"&:focus, &:hover, &$active\": {\n      boxShadow: \"inherit\",\n    },\n  },\n  active: {},\n  // valueLabel: {\n  //   left: \"calc(-50% + 4px)\",\n  // },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\nexport default function SelectYear(props) {\n  const YEAR_END = new Date().getFullYear(); // dynamically set as current year\n  const [yearRange, setYearRange] = React.useState([1970, YEAR_END]);\n\n  // change yearRange with sliders\n  function handleChangeRange(e, data) {\n    setYearRange(data);\n  }\n\n  return (\n    <div className=\"search-year\">\n      YEAR\n      <Row>\n        <Col xs=\"auto\" className=\"year-title\">\n          1970\n        </Col>\n        <Col xs>\n          <RangeSlider\n            name=\"year\"\n            value={yearRange}\n            min={1970}\n            max={YEAR_END}\n            valueLabelDisplay=\"auto\"\n            defaultValue={[1970, YEAR_END]}\n            // fired when the slider's value changed\n            onChange={handleChangeRange}\n            // callback function fired when mouseup it triggered\n            onChangeCommitted={(e) => {\n              props.onChange(yearRange);\n            }}\n            getAriaLabel={(index) => (index === 0 ? \"Start\" : \"End\")}\n          />\n        </Col>\n        <Col xs=\"auto\" className=\"year-title\">\n          {YEAR_END}\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./SearchType.styles.scss\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    color: \"lightgray\",\n    height: 45,\n    padding: \"-2px 6px\",\n  },\n});\n\nexport default function SelectType(props) {\n  const type = props.value;\n  const classes = useStyles();\n  return (\n    <div className=\"search-type\">\n      <FormControl component=\"fieldset\" className=\"search-type\">\n        TYPE {type}\n        <RadioGroup row name=\"type\" defaultValue=\"\" onChange={props.onChange}>\n          <FormControlLabel\n            value=\"\"\n            control={<Radio className={classes.root} color=\"secondary\" />}\n            label=\"Any\"\n          />\n          <FormControlLabel\n            value=\"movie\"\n            control={<Radio className={classes.root} />}\n            label=\"Movies\"\n          />\n          <FormControlLabel\n            value=\"series\"\n            control={<Radio className={classes.root} />}\n            label=\"Series\"\n          />\n          <FormControlLabel\n            value=\"episode\"\n            control={<Radio className={classes.root} />}\n            label=\"Episodes\"\n          />\n        </RadioGroup>\n      </FormControl>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./SearchBar.styles.scss\";\nimport SearchYear from \"./SearchYear/SearchYear\";\nimport SearchType from \"./SearchType/SearchType\";\nimport { BsSearch } from \"react-icons/bs\";\nimport { Container, Row, Col, InputGroup, FormControl } from \"react-bootstrap\";\n\nfunction SearchBar(props) {\n  const { keyword, year, type } = props.search;\n  const { onClearKeyword, onChangeYear, onChangeType, onChangeSearch } = props;\n\n  return (\n    <Container className=\"search-bar-container\">\n      <Row>\n        {/* KEYWORD - search input box */}\n        <Col xs>\n          <InputGroup className=\"search-input-block\" size=\"lg\">\n            {/* search icon */}\n            <InputGroup.Text>\n              <BsSearch id=\"search-icon\" />\n            </InputGroup.Text>\n            <FormControl\n              placeholder=\"Search Movies\"\n              aria-label=\"keyword\"\n              aria-describedby=\"basic-addon1\"\n              name=\"keyword\"\n              id=\"search-keyword-input\"\n              type=\"text\"\n              value={keyword}\n              onClick={onClearKeyword}\n              onChange={onChangeSearch}\n            />\n          </InputGroup>\n        </Col>\n\n        {/* YEAR - change search year range with Material UI slider */}\n        <Col className=\"search-year-block\" xs=\"auto\">\n          <SearchYear name=\"year\" value={year} onChange={onChangeYear} />\n        </Col>\n\n        {/* TYPE - change search type */}\n        <Col className=\"search-type-block\" xs=\"auto\">\n          <SearchType name=\"type\" value={type} onChange={onChangeType} />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport \"./LoadMore.styles.scss\";\nimport { Button } from \"react-bootstrap\";\n\nexport default function LoadMore(props) {\n  const { loadMoreFn } = props;\n  return (\n    <div className=\"load-more-btn d-grid gap-2\">\n      <Button variant=\"secondary\" onClick={loadMoreFn}>\n        Click to Load More...\n      </Button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./MovieItem.styles.scss\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nexport default function MovieItem(props) {\n  const { title, year, imgURL, id, onClick } = props;\n\n  // use defaultPosterURL if imgURL is not available\n  const defaultPosterURL =\n    \"https://allaboutvanya.files.wordpress.com/2012/02/ilovemovies2.jpg\";\n\n  return (\n    // Executed on click\n    <Container className={props.className} onClick={() => onClick(id)}>\n      <Row>\n        <Col md={12} xl={3}>\n          <img\n            src={imgURL !== \"N/A\" ? imgURL : defaultPosterURL}\n            alt=\"Poster\"\n            className=\"movie-item-poster  d-none d-xl-block\"\n          />\n        </Col>\n        <Col md={12} xl={9}>\n          <Row>\n            <div className=\"movie-item-title grey-font\">{title}</div>\n          </Row>\n          <Row>\n            <div className=\"movie-item-year grey-font\">{year}</div>\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport \"./MovieList.styles.scss\";\nimport LoadMore from \"../LoadMore/LoadMore\";\n\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport MovieItem from \"./MovieItem/MovieItem\";\n\nexport default function MovieList(props) {\n  const {\n    search: {\n      year: [startY, endY],\n      type,\n      keyword,\n    },\n    totalResults,\n    movies,\n    onSelect,\n    loadMoreMovies,\n    hasMore,\n    selectId,\n  } = props;\n\n  return (\n    <>\n      <div className=\"total-result-counts grey-font\">\n        <p>\n          {`SEARCH ${\n            type ? type.toUpperCase() : \"ANY\"\n          }: \"${keyword}\" - YEAR: ${startY} - ${endY} `}\n        </p>\n        <p>{movies.length ? ` ${totalResults}  RESULTS` : \"\"}</p>\n      </div>\n      <div>\n        <InfiniteScroll\n          dataLength={movies.length} //This is important field to render the next data\n          next={loadMoreMovies} // trigger loadMore function\n          onClick={loadMoreMovies}\n          height={750} // trigger loading at this height\n          hasMore={hasMore}\n          loader={<h5>Scroll to Loading More...</h5>}\n          endMessage={\n            <p style={{ textAlign: \"center\" }}>\n              <b>Yay! You have seen it all</b>\n            </p>\n          }\n        >\n          {movies.map(({ Title, Year, Type, Poster, imdbID }, index) => {\n            if (Year > startY && Year < endY) {\n              return (\n                <MovieItem\n                  className={\n                    selectId === index ? \"movie-item  selected\" : \"movie-item\"\n                  } // change background color\n                  key={index}\n                  id={index}\n                  title={Title}\n                  year={Year}\n                  type={Type}\n                  imgURL={Poster}\n                  onClick={onSelect}\n                />\n              );\n            } else {\n              return null;\n            }\n          })}\n        </InfiniteScroll>\n      </div>\n      {movies.length < totalResults ? (\n        <LoadMore loadMoreFn={loadMoreMovies} hasMore={hasMore} />\n      ) : (\n        <div></div>\n      )}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, Offcanvas } from \"react-bootstrap\";\nimport \"./WatchListSideBar.styles.scss\";\n\nexport default function WatchListSideBar(props) {\n  const { listData, placement } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button\n        variant=\"primary\"\n        onClick={handleShow}\n        className=\"myWatchListSideBarBtn\"\n      >\n        My WatchList\n      </Button>\n\n      <Offcanvas show={show} onHide={handleClose} placement={placement}>\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title>My WatchList</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n          {listData ? (\n            listData.map((data, index) => {\n              return <p key={index}>{data}</p>;\n            })\n          ) : (\n            <p>Empty</p>\n          )}\n        </Offcanvas.Body>\n      </Offcanvas>\n    </>\n  );\n}\n","import React from \"react\";\nimport \"./AddToWatchList.styles.scss\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\n\nexport default function AddToWatchList(props) {\n  const { onClick, onWatchList } = props;\n\n  return (\n    <button onClick={onClick} className=\"addWatchlistBtn\">\n      {onWatchList ? (\n        <BookmarkIcon className=\"bookmark\" />\n      ) : (\n        <BookmarkBorderIcon className=\"bookmark\" />\n      )}\n      Watchlist\n    </button>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./MovieDetail.styles.scss\";\n\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport WatchListSideBar from \"../WatchListSideBar/WatchListSideBar\";\nimport AddToWatchList from \"./AddToWatchList/AddToWatchList\";\n\nexport default function MovieDetail(props) {\n  const { Rated, Runtime, Actors, Genre, Plot, Ratings } = props.info;\n  const { Title, Year, Poster, imdbID } = props.basic;\n  const [collection, setCollection] = useState([]);\n  const [watchList, setWatchList] = useState(false);\n\n  useEffect(() => {\n    // add dark bookmark if the movie is in the watchList\n    setWatchList(collection.includes(imdbID));\n    return () => {\n      // clean up bookmark tag\n      setWatchList(false);\n    };\n  }, [imdbID, watchList, collection]);\n\n  function toggleWatchList() {\n    setWatchList((prevValue) => {\n      return !prevValue;\n    });\n    // TODO: handle add to watch list array and display later on WatchListPage\n    watchList ? removeFromList() : addToList();\n  }\n\n  function addToList() {\n    setCollection((prev) => {\n      if (!collection.includes(imdbID)) {\n        return [...prev, imdbID];\n      }\n      console.log(\"skip for repeated movie\");\n      return prev;\n    });\n  }\n\n  function removeFromList() {\n    setCollection((prev) => {\n      if (collection.includes(imdbID)) {\n        return prev.filter((item) => {\n          return item !== imdbID;\n        });\n      } else {\n        return prev;\n      }\n    });\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col xs={12} md={3}>\n          <img src={Poster} alt={Title} className=\"poster\" />\n        </Col>\n        <Col md={9}>\n          <Container>\n            <Row>\n              <Col md={6}></Col>\n              <Col sm={12} md>\n                <AddToWatchList\n                  onClick={toggleWatchList}\n                  onWatchList={watchList}\n                />\n                <WatchListSideBar\n                  listData={collection}\n                  placement={\"end\"}\n                  className=\"myWatchListBtn\"\n                />\n              </Col>\n            </Row>\n            <Row className=\"text-row\">\n              <Col xs={12}>\n                <h1 className=\"detail-title grey-font\"> {Title}</h1>\n                <div className=\"detail-row\">\n                  <p className=\"detail-rated grey-font ft-20\">{Rated}</p>\n                  <p className=\"detail-year grey-font ft-20\">{`  ${Year} · ${Genre} · ${Runtime}`}</p>\n                </div>\n                <p className=\"detail-actors grey-font ft-20\">{Actors}</p>\n              </Col>\n            </Row>\n          </Container>\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <Col>\n          <p className=\"detail-plot grey-font ft-20\">{Plot} </p>\n        </Col>\n      </Row>\n      <hr />\n      {Ratings ? (\n        <Row className=\"detail-ratings grey-font\">\n          {Ratings.length ? (\n            <Col className=\"detail-rating grey-font\">\n              <h4>{Ratings[0].Value}</h4>\n              <h5>{Ratings[0].Source}</h5>\n            </Col>\n          ) : null}\n          {Ratings.length > 1 ? (\n            <Col className=\"detail-rating grey-font\">\n              <h4>{Ratings[1].Value}</h4>\n              <h5>{Ratings[1].Source}</h5>\n            </Col>\n          ) : null}\n          {/* 3rd column is optional due to the API rating results */}\n          {Ratings.length > 2 ? (\n            <Col className=\"detail-rating grey-font\">\n              <h4>{Ratings[2].Value}</h4>\n              <h5>{Ratings[2].Source}</h5>\n            </Col>\n          ) : null}\n        </Row>\n      ) : null}\n      <hr />\n      <Row>\n        <Col className=\"grey-font\">\n          <h5>My movie watch list (Total {collection.length} items):</h5>\n          {collection.map((item, index) => (\n            <p key={index}>{item}</p>\n          ))}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./SearchResult.styles.scss\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport MovieList from \"./MovieList/MovieList\";\nimport MovieDetail from \"./MovieDetail/MovieDetail\";\n\nexport default function SearchResult(props) {\n  const { search, totalResults, movies, loadMoreMovies, hasMore } = props;\n\n  const [imdb, setImdb] = useState(\"tt0076759\");\n  const [selectId, setSelectId] = useState(0);\n  const [movieInfo, setMovieInfo] = useState({});\n\n  const API_KEY = \"866364e\";\n  const detailURL = `https://www.omdbapi.com/?apikey=${API_KEY}&i=${imdb}`;\n\n  useEffect(() => {\n    //fetch data from omdb API with imdbId\n    console.log(\"(R) UseEffect fetch movie detail ->\");\n    if (movieInfo.length) {\n      setImdb(movies[0].imdbID);\n    }\n    getMovieDetail();\n  }, [imdb]);\n\n  const getMovieDetail = async () => {\n    try {\n      console.log(\">> Render get movie detail ->\", imdb);\n      const response = await fetch(detailURL);\n      const data = await response.json();\n      setMovieInfo(data);\n    } catch (e) {\n      console.error(e.toString);\n    }\n  };\n\n  function handleSelect(id) {\n    setSelectId(id);\n    setImdb(movies[id].imdbID);\n    getMovieDetail();\n  }\n\n  return (\n    <Container className=\"search-result-container\">\n      <Row>\n        <Col xs={5} md={4} className=\"search-result-list\">\n          <MovieList\n            movies={movies}\n            search={search}\n            selectId={selectId}\n            onSelect={handleSelect}\n            totalResults={totalResults}\n            loadMoreMovies={loadMoreMovies}\n            hasMore={hasMore}\n          />\n        </Col>\n        <Col xs={7} md={8} className=\"detail-container\">\n          {movieInfo ? (\n            <MovieDetail basic={movies[selectId]} info={movieInfo} />\n          ) : (\n            <h1>Loading Movie Details...</h1>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport SearchBar from \"../../components/SearchBar/SearchBar\";\nimport SearchResult from \"../../components/SearchResult/SearchResult\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"./HomePage.styles.scss\";\n\nexport default function HomePage() {\n  // movies - search results fetching from the omdb API\n  const [movies, setMovies] = useState([]);\n  const [totalResults, setTotalResults] = useState(0);\n\n  // search - search conditions set from search-bar\n  const displayCurrentYear = new Date().getFullYear();\n  const [clearTag, setClearTag] = useState(false);\n\n  // set default search value\n  const [search, setSearch] = useState({\n    keyword: \"star\",\n    year: [1970, displayCurrentYear],\n    type: \"\", // default type '' - any\n    page: 1,\n  });\n\n  // page - add to URL to load more search results from the omdb API\n  const [hasMore, setHasMore] = useState(true);\n\n  // omdb API_KEY and URL\n  const API_KEY = \"866364e\";\n  const listURL = `https://www.omdbapi.com/?apikey=${API_KEY}&s=${search.keyword}&type=${search.type}&page=${search.page}`;\n\n  useEffect(() => {\n    getMovies(); //fetch data from API\n  }, [search]);\n\n  // async function to fetch movie list(array) from OMDB API\n  // each movie is shown as {Poster,Title,Type,Year,imdbID}\n  async function getMovies() {\n    try {\n      const response = await fetch(listURL);\n      const data = await response.json();\n      console.log(\"Get Movie data -from omdb API>>\", listURL, data);\n      if (data.Response === \"True\") {\n        if (clearTag) {\n          console.log(\"Clear movies\");\n          setMovies([]);\n        }\n\n        if (movies.length === 0) {\n          console.log(\"1st time set movies\", data.Response);\n          setMovies(data.Search);\n          setTotalResults(data.totalResults);\n        } else {\n          handleResult(data);\n        }\n      }\n    } catch (e) {\n      console.error(e.toString);\n    }\n  }\n\n  function handleResult(result) {\n    setTotalResults(result.totalResults);\n    if (movies.length >= totalResults) {\n      setHasMore(false);\n    }\n    setMovies((prev) => {\n      return prev.concat(result.Search);\n    });\n  }\n\n  const handleKeyword = () => {\n    setSearch((prev) => {\n      return {\n        ...prev,\n        keyword: \"\",\n        page: 1,\n      };\n    });\n    // add clear tag to reset movies\n    setClearTag(true);\n  };\n\n  // filter movie-item display in the year range\n  function handleChangeYear(value) {\n    setSearch((prev) => {\n      return {\n        ...prev,\n        year: value,\n      };\n    });\n  }\n\n  // change keyword and type and rerender API call\n  function handleChangeSearch(event) {\n    const { name, value } = event.target;\n    console.log(\"handleSearchChange <- \", name, value);\n    setSearch((prev) => {\n      return {\n        ...prev,\n        [name]: value,\n      };\n    });\n    setClearTag(true);\n    // setMovies([]);\n  }\n\n  function loadMoreMovies() {\n    setSearch((prev) => {\n      return {\n        ...prev,\n        page: prev.page + 1,\n      };\n    });\n  }\n\n  return (\n    <div className=\"homepage\">\n      <Container>\n        <Row>\n          <SearchBar\n            className=\"search-bar\"\n            search={search}\n            onClearKeyword={handleKeyword}\n            onChangeYear={handleChangeYear}\n            onChangeType={handleChangeSearch}\n            onChangeSearch={handleChangeSearch}\n          />\n        </Row>\n        <Row>\n          {/* render SearchResult if movies is not empty */}\n          <Col>\n            {movies.length ? (\n              <SearchResult\n                className=\"search-result\"\n                movies={movies}\n                search={search}\n                totalResults={totalResults}\n                loadMoreMovies={loadMoreMovies}\n                hasMore={hasMore}\n              />\n            ) : (\n              <div className=\"empty-keyword\">\n                <h1>Woops...</h1>\n                <h3>Please Enter KeyWord to Search Movie</h3>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./WatchListPage.styles.scss\";\n\nexport default function WatchListPage() {\n  return (\n    <div className=\"under-construction\">\n      <h1>Watch List Page</h1>\n      <h3>is Under Construction</h3>\n      <img\n        src=\"https://ulladulla-p.schools.nsw.gov.au/content/dam/doe/sws/schools/u/ulladulla-p/gallery/news-images/2019/websiteunderconstruction.jpg.thumb.1280.1280.jpg\"\n        alt=\"Under Construction\"\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./Header.styles.scss\";\nimport { BiCameraMovie } from \"react-icons/bi\";\nimport { NavLink, Link } from \"react-router-dom\";\n\nexport default function Header() {\n  return (\n    <div className=\"header\">\n      <nav>\n        <div className=\"logo\">\n          <BiCameraMovie className=\"logo\" />\n          <Link to=\"/\">\n            <span className=\"header-title\">Open Movie Database</span>\n          </Link>\n        </div>\n        <div className=\"links\">\n          <ul>\n            <li>\n              {/* NavLink - renders a navigation link with react-router-dom */}\n              <NavLink to=\"/\" className=\"header-link\">\n                Search Movie\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/watchlist\" className=\"header-link\">\n                WatchList Page\n              </NavLink>\n            </li>\n            {/* watch list sidebar */}\n            {/* <li>\n              <WatchListData placement={\"end\"} className=\"watch-list-link\" />\n            </li> */}\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","import './App.scss';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport HomePage from './pages/HomePage/HomePage';\nimport WatchListPage from './pages/WatchList/WatchListPage';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './components/Header/Header'\n\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      {/* Use react-router-dom to manage dynamic routing between pages*/}\n      <Switch>\n        {/* Route - Renders a UI component by URL*/}\n        <Route exact path='/' component={HomePage} />\n        <Route path='/watchlist' component={WatchListPage} />\n        <Route path='*' component={HomePage} />\n      </Switch>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // BrowserRouter - wrap <App /> for managing routing \n  <React.StrictMode >\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}