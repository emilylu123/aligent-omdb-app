{"version":3,"sources":["components/SearchBar/SearchYear/SearchYear.jsx","components/SearchBar/SearchType/SearchType.jsx","components/SearchBar/SearchBar.jsx","components/SearchResult/LoadMore/LoadMore.jsx","components/SearchResult/MovieList/MovieItem/MovieItem.jsx","components/SearchResult/MovieList/MovieList.jsx","components/SearchResult/WatchListSideBar/WatchListSideBar.jsx","components/SearchResult/MovieDetail/AddToWatchList/AddToWatchList.jsx","components/SearchResult/MovieDetail/MovieDetail.jsx","components/SearchResult/SearchResult.jsx","pages/HomePage/HomePage.jsx","pages/WatchList/WatchListPage.jsx","components/Header/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["SelectYear","props","YEAR_END","Date","getFullYear","React","useState","yearRange","setYearRange","className","Typography","id","gutterBottom","Grid","container","spacing","item","xs","Slider","color","name","value","min","max","onChange","e","data","onChangeCommitted","valueLabelDisplay","getAriaLabel","index","SelectType","type","FormControl","component","RadioGroup","row","defaultValue","FormControlLabel","control","Radio","label","SearchBar","search","keyword","year","onClearKeyword","onChangeYear","onChangeType","onChangeSearch","Container","Row","Col","InputGroup","size","Text","placeholder","aria-label","aria-describedby","onClick","LoadMore","loadMoreFn","Button","variant","MovieItem","title","imgURL","md","xl","src","alt","MovieList","startY","endY","totalResults","movies","onSelect","loadMoreMovies","hasMore","selectId","toUpperCase","length","dataLength","next","height","loader","endMessage","style","textAlign","map","Title","Year","Type","Poster","imdbID","WatchListSideBar","listData","placement","show","setShow","Offcanvas","onHide","Header","closeButton","Body","AddToWatchList","onWatchList","MovieDetail","info","Rated","Runtime","Actors","Genre","Plot","Ratings","basic","collection","setCollection","watchList","setWatchList","useEffect","includes","sm","prevValue","prev","filter","console","log","Value","Source","SearchResult","imdb","setImdb","setSelectId","movieInfo","setMovieInfo","detailURL","getMovieDetail","a","fetch","response","json","error","toString","HomePage","setMovies","setTotalResults","displayCurrentYear","clearTag","setClearTag","page","setSearch","setHasMore","listURL","Response","Search","handleResult","result","concat","getMovies","handleChangeSearch","event","target","WatchListPage","to","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62f5890b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./SearchYear.styles.scss\";\nimport { Grid, Slider, Typography } from \"@material-ui/core\";\n\nexport default function SelectYear(props) {\n  const YEAR_END = new Date().getFullYear(); // dynamically set as current year\n  const [yearRange, setYearRange] = React.useState([1970, YEAR_END]);\n\n  // change yearRange with sliders\n  function handleChangeRange(e, data) {\n    setYearRange(data);\n  }\n\n  return (\n    <div className=\"search-year\">\n      <Typography id=\"year-slider\" gutterBottom>\n        YEAR\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item>1970</Grid>\n        <Grid item xs>\n          <Slider\n            color=\"secondary\"\n            name=\"year\"\n            value={yearRange}\n            min={1970}\n            max={YEAR_END}\n            // fired when the slider's value changed\n            onChange={handleChangeRange}\n            // callback function fired when mouseup it triggered\n            onChangeCommitted={(e) => {\n              props.onChange(yearRange);\n            }}\n            valueLabelDisplay=\"auto\"\n            getAriaLabel={(index) => (index === 0 ? \"Start\" : \"End\")}\n          />\n        </Grid>\n        <Grid item>{YEAR_END}</Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./SearchType.styles.scss\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default function SelectType(props) {\n  const type = props.value;\n\n  return (\n    <div className=\"search-type\">\n      <FormControl component=\"fieldset\" className=\"search-type\">\n        TYPE {type}\n        <RadioGroup row name=\"type\" defaultValue=\"\" onChange={props.onChange}>\n          <FormControlLabel\n            value=\"\"\n            control={<Radio color=\"secondary\" />}\n            label=\"Any\"\n          />\n          <FormControlLabel\n            value=\"movie\"\n            control={<Radio color=\"secondary\" />}\n            label=\"Movies\"\n          />\n          <FormControlLabel\n            value=\"series\"\n            control={<Radio color=\"secondary\" />}\n            label=\"Series\"\n          />\n          <FormControlLabel\n            value=\"episode\"\n            control={<Radio color=\"secondary\" />}\n            label=\"Episodes\"\n          />\n        </RadioGroup>\n      </FormControl>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./SearchBar.styles.scss\";\nimport SearchYear from \"./SearchYear/SearchYear\";\nimport SearchType from \"./SearchType/SearchType\";\nimport { BsSearch } from \"react-icons/bs\";\nimport { Container, Row, Col, InputGroup, FormControl } from \"react-bootstrap\";\n\nfunction SearchBar(props) {\n  const { keyword, year, type } = props.search;\n  const { onClearKeyword, onChangeYear, onChangeType, onChangeSearch } = props;\n\n  return (\n    <Container className=\"search-bar-container\">\n      <Row>\n        {/* KEYWORD - search input box */}\n        <Col xs>\n          <InputGroup className=\"search-input-block\" size=\"lg\">\n            {/* search icon */}\n            <InputGroup.Text>\n              <BsSearch id=\"search-icon\" />\n            </InputGroup.Text>\n            <FormControl\n              placeholder=\"Search Movies\"\n              aria-label=\"keyword\"\n              aria-describedby=\"basic-addon1\"\n              name=\"keyword\"\n              id=\"search-keyword-input\"\n              type=\"text\"\n              value={keyword}\n              onClick={onClearKeyword}\n              onChange={onChangeSearch}\n            />\n          </InputGroup>\n        </Col>\n\n        {/* YEAR - change search year range with Material UI slider */}\n        <Col className=\"search-year-block\" xs=\"auto\">\n          <SearchYear name=\"year\" value={year} onChange={onChangeYear} />\n        </Col>\n\n        {/* TYPE - change search type */}\n        <Col className=\"search-type-block\" xs=\"auto\">\n          <SearchType name=\"type\" value={type} onChange={onChangeType} />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport \"./LoadMore.styles.scss\";\nimport { Button } from \"react-bootstrap\";\n\nexport default function LoadMore(props) {\n  const { loadMoreFn } = props;\n  return (\n    <div className=\"load-more-btn d-grid gap-2\">\n      <Button variant=\"secondary\" onClick={loadMoreFn}>\n        Click to Load More...\n      </Button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./MovieItem.styles.scss\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nexport default function MovieItem(props) {\n  const { title, year, imgURL, id, onClick } = props;\n\n  // use defaultPosterURL if imgURL is not available\n  const defaultPosterURL =\n    \"https://allaboutvanya.files.wordpress.com/2012/02/ilovemovies2.jpg\";\n\n  return (\n    // Executed on click\n    <Container className={props.className} onClick={() => onClick(id)}>\n      <Row>\n        <Col md={12} xl={3}>\n          <img\n            src={imgURL !== \"N/A\" ? imgURL : defaultPosterURL}\n            alt=\"Poster\"\n            className=\"movie-item-poster  d-none d-xl-block\"\n          />\n        </Col>\n        <Col md={12} xl={9}>\n          <Row>\n            <div className=\"movie-item-title grey-font\">{title}</div>\n          </Row>\n          <Row>\n            <div className=\"movie-item-year grey-font\">{year}</div>\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport \"./MovieList.styles.scss\";\nimport LoadMore from \"../LoadMore/LoadMore\";\n\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport MovieItem from \"./MovieItem/MovieItem\";\n\nexport default function MovieList(props) {\n  const {\n    search: {\n      year: [startY, endY],\n      type,\n      keyword,\n    },\n    totalResults,\n    movies,\n    onSelect,\n    loadMoreMovies,\n    hasMore,\n    selectId,\n  } = props;\n\n  return (\n    <>\n      <div className=\"total-result-counts grey-font\">\n        <p>\n          {`SEARCH MOVIE: \"${keyword}\" - YEAR RANGE: ${startY} - ${endY} - TYPE: `}{\" \"}\n          {type ? type.toUpperCase() : \"ANY\"}\n        </p>\n        <p>\n          {movies.length ? `${movies.length} / ${totalResults}  RESULTS` : \"\"}\n        </p>\n      </div>\n      <div>\n        <InfiniteScroll\n          dataLength={movies.length} //This is important field to render the next data\n          next={loadMoreMovies} // trigger loadMore function\n          onClick={loadMoreMovies}\n          height={850} // trigger loading at this height\n          hasMore={hasMore}\n          loader={<h5>Scroll to Loading More...</h5>}\n          endMessage={\n            <p style={{ textAlign: \"center\" }}>\n              <b>`Yay! You have seen it all`</b>\n            </p>\n          }\n        >\n          {movies.map(({ Title, Year, Type, Poster, imdbID }, index) => {\n            if (Year > startY && Year < endY) {\n              return (\n                <MovieItem\n                  className={\n                    selectId === index ? \"movie-item  selected\" : \"movie-item\"\n                  } // change background color\n                  key={index}\n                  id={index}\n                  title={Title}\n                  year={Year}\n                  type={Type}\n                  imgURL={Poster}\n                  onClick={onSelect}\n                />\n              );\n            } else {\n              return null;\n            }\n          })}\n        </InfiniteScroll>\n      </div>\n      {movies.length < totalResults ? (\n        <LoadMore loadMoreFn={loadMoreMovies} hasMore={hasMore} />\n      ) : (\n        <div></div>\n      )}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, Offcanvas } from \"react-bootstrap\";\nimport \"./WatchListSideBar.styles.scss\";\n\nexport default function WatchListSideBar(props) {\n  const { listData, placement } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button\n        variant=\"primary\"\n        onClick={handleShow}\n        className=\"myWatchListSideBarBtn\"\n      >\n        My WatchList\n      </Button>\n\n      <Offcanvas show={show} onHide={handleClose} placement={placement}>\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title>My WatchList</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n          {listData ? (\n            listData.map((data, index) => {\n              return <p key={index}>{data}</p>;\n            })\n          ) : (\n            <p>Empty</p>\n          )}\n        </Offcanvas.Body>\n      </Offcanvas>\n    </>\n  );\n}\n","import React from \"react\";\nimport \"./AddToWatchList.styles.scss\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\n\nexport default function AddToWatchList(props) {\n  const { onClick, onWatchList } = props;\n\n  return (\n    <button onClick={onClick} className=\"addWatchlistBtn\">\n      {onWatchList ? (\n        <BookmarkIcon className=\"bookmark\" />\n      ) : (\n        <BookmarkBorderIcon className=\"bookmark\" />\n      )}\n      Watchlist\n    </button>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./MovieDetail.styles.scss\";\n\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport WatchListSideBar from \"../WatchListSideBar/WatchListSideBar\";\nimport AddToWatchList from \"./AddToWatchList/AddToWatchList\";\n\nexport default function MovieDetail(props) {\n  const { Rated, Runtime, Actors, Genre, Plot, Ratings } = props.info;\n  const { Title, Type, Year, Poster, imdbID } = props.basic;\n  const [collection, setCollection] = useState([]);\n  const [watchList, setWatchList] = useState(false);\n\n  useEffect(() => {\n    // clear up watchlist btn\n    checkWatchList();\n    return () => {\n      setWatchList(false);\n    };\n  }, [imdbID]);\n\n  function toggleWatchList() {\n    setWatchList((prevValue) => {\n      return !prevValue;\n    });\n    // TODO: handle add to watch list array and display later on WatchListPage\n    watchList ? removeFromList() : addToList();\n  }\n\n  function addToList() {\n    setCollection((prev) => {\n      if (!collection.includes(imdbID)) {\n        return [...prev, imdbID];\n      }\n      console.log(\"skip for repeated movie\");\n      return prev;\n    });\n  }\n\n  function removeFromList() {\n    setCollection((prev) => {\n      if (collection.includes(imdbID)) {\n        return prev.filter((item) => {\n          return item !== imdbID;\n        });\n      } else {\n        return prev;\n      }\n    });\n  }\n\n  //\n  function checkWatchList() {\n    setWatchList(collection.includes(imdbID));\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col xs={12} md={3}>\n          <img src={Poster} alt={Title} className=\"poster\" />\n        </Col>\n        <Col md={9}>\n          <Container>\n            <Row>\n              <Col md={6}></Col>\n              <Col sm={12} md>\n                <AddToWatchList\n                  onClick={toggleWatchList}\n                  onWatchList={watchList}\n                />\n                <WatchListSideBar\n                  listData={collection}\n                  placement={\"end\"}\n                  className=\"myWatchListBtn\"\n                />\n              </Col>\n            </Row>\n            <Row className=\"text-row\">\n              <Col xs={12}>\n                <h1 className=\"detail-title grey-font\"> {Title}</h1>\n                <div className=\"detail-row\">\n                  <p className=\"detail-rated grey-font ft-20\">{Rated}</p>\n                  <p className=\"detail-year grey-font ft-20\">{`  ${Year} · ${Genre} · ${Runtime}`}</p>\n                </div>\n                <p className=\"detail-actors grey-font ft-20\">{Actors}</p>\n              </Col>\n            </Row>\n          </Container>\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <Col>\n          <p className=\"detail-plot grey-font ft-20\">{Plot} </p>\n        </Col>\n      </Row>\n      <hr />\n      {Ratings ? (\n        <Row className=\"detail-ratings grey-font\">\n          {Ratings.length ? (\n            <Col className=\"detail-rating grey-font\">\n              <h4>{Ratings[0].Value}</h4>\n              <h5>{Ratings[0].Source}</h5>\n            </Col>\n          ) : null}\n          {Ratings.length > 1 ? (\n            <Col className=\"detail-rating grey-font\">\n              <h4>{Ratings[1].Value}</h4>\n              <h5>{Ratings[1].Source}</h5>\n            </Col>\n          ) : null}\n          {/* 3rd column is optional due to the API rating results */}\n          {Ratings.length > 2 ? (\n            <Col className=\"detail-rating grey-font\">\n              <h4>{Ratings[2].Value}</h4>\n              <h5>{Ratings[2].Source}</h5>\n            </Col>\n          ) : null}\n        </Row>\n      ) : null}\n      <hr />\n      <Row>\n        <Col className=\"grey-font\">\n          <h5>My movie watch list (Total {collection.length} items):</h5>\n          {collection.map((item, index) => (\n            <p key={index}>{item}</p>\n          ))}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./SearchResult.styles.scss\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport MovieList from \"./MovieList/MovieList\";\nimport MovieDetail from \"./MovieDetail/MovieDetail\";\n\nexport default function SearchResult(props) {\n  const { search, totalResults, movies, loadMoreMovies, hasMore } = props;\n\n  const [imdb, setImdb] = useState(\"tt0076759\");\n  const [selectId, setSelectId] = useState(0);\n  const [movieInfo, setMovieInfo] = useState({});\n\n  const API_KEY = \"866364e\";\n  const detailURL = `http://www.omdbapi.com/?apikey=${API_KEY}&i=${imdb}`;\n\n  useEffect(() => {\n    //fetch data from omdb API with imdbId\n    console.log(\"(R) UseEffect fetch movie detail ->\");\n    if (movieInfo.length) {\n      setImdb(movies[0].imdbID);\n    }\n    getMovieDetail();\n  }, [imdb]);\n\n  const getMovieDetail = async () => {\n    try {\n      console.log(\">> Render get movie detail ->\", imdb);\n      const response = await fetch(detailURL);\n      const data = await response.json();\n      setMovieInfo(data);\n    } catch (e) {\n      console.error(e.toString);\n    }\n  };\n\n  function handleSelect(id) {\n    setSelectId(id);\n    setImdb(movies[id].imdbID);\n    getMovieDetail();\n  }\n\n  return (\n    <Container className=\"search-result-container\">\n      <Row>\n        <Col xs={5} md={4} className=\"search-result-list\">\n          <MovieList\n            movies={movies}\n            search={search}\n            selectId={selectId}\n            onSelect={handleSelect}\n            totalResults={totalResults}\n            loadMoreMovies={loadMoreMovies}\n            hasMore={hasMore}\n          />\n        </Col>\n        <Col xs={7} md={8} className=\"detail-container\">\n          {movieInfo ? (\n            <MovieDetail basic={movies[selectId]} info={movieInfo} />\n          ) : (\n            <h1>Loading Movie Details...</h1>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport SearchBar from \"../../components/SearchBar/SearchBar\";\nimport SearchResult from \"../../components/SearchResult/SearchResult\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"./HomePage.styles.scss\";\n\nexport default function HomePage() {\n  // movies - search results fetching from the omdb API\n  const [movies, setMovies] = useState([]);\n  const [totalResults, setTotalResults] = useState(0);\n\n  // search - search conditions set from search-bar\n  const displayCurrentYear = new Date().getFullYear();\n  const [clearTag, setClearTag] = useState(false);\n\n  // set default search value\n  const [search, setSearch] = useState({\n    keyword: \"star\",\n    year: [1970, displayCurrentYear],\n    type: \"\", // default type '' - any\n    page: 1,\n  });\n\n  // page - add to URL to load more search results from the omdb API\n  const [hasMore, setHasMore] = useState(true);\n\n  // omdb API_KEY and URL\n  const API_KEY = \"866364e\";\n  const listURL = `http://www.omdbapi.com/?apikey=${API_KEY}&s=${search.keyword}&type=${search.type}&page=${search.page}`;\n\n  useEffect(() => {\n    getMovies(); //fetch data from API\n  }, [search]);\n\n  // async function to fetch movie list(array) from OMDB API\n  // each movie is shown as {Poster,Title,Type,Year,imdbID}\n  async function getMovies() {\n    try {\n      const response = await fetch(listURL);\n      const data = await response.json();\n      console.log(\"Get Movie data -from omdb API>>\", listURL, data);\n      if (data.Response === \"True\") {\n        if (clearTag) {\n          console.log(\"Clear movies\");\n          setMovies([]);\n        }\n\n        if (movies.length === 0) {\n          console.log(\"1st time set movies\", data.Response);\n          setMovies(data.Search);\n          setTotalResults(data.totalResults);\n        } else {\n          handleResult(data);\n        }\n      }\n    } catch (e) {\n      console.error(e.toString);\n    }\n  }\n\n  function handleResult(result) {\n    setTotalResults(result.totalResults);\n    if (movies.length >= totalResults) {\n      setHasMore(false);\n    }\n    setMovies((prev) => {\n      return prev.concat(result.Search);\n    });\n  }\n\n  const handleKeyword = () => {\n    setSearch((prev) => {\n      return {\n        ...prev,\n        keyword: \"\",\n        page: 1,\n      };\n    });\n    // add clear tag to reset movies\n    setClearTag(true);\n  };\n\n  // filter movie-item display in the year range\n  function handleChangeYear(value) {\n    setSearch((prev) => {\n      return {\n        ...prev,\n        year: value,\n      };\n    });\n  }\n\n  // change keyword and type and rerender API call\n  function handleChangeSearch(event) {\n    const { name, value } = event.target;\n    console.log(\"handleSearchChange <- \", name, value);\n    setSearch((prev) => {\n      return {\n        ...prev,\n        [name]: value,\n      };\n    });\n    setClearTag(true);\n    // setMovies([]);\n  }\n\n  function loadMoreMovies() {\n    setSearch((prev) => {\n      return {\n        ...prev,\n        page: prev.page + 1,\n      };\n    });\n  }\n\n  return (\n    <div className=\"homepage\">\n      <Container>\n        <Row>\n          <SearchBar\n            className=\"search-bar\"\n            search={search}\n            onClearKeyword={handleKeyword}\n            onChangeYear={handleChangeYear}\n            onChangeType={handleChangeSearch}\n            onChangeSearch={handleChangeSearch}\n          />\n        </Row>\n        <Row>\n          {/* render SearchResult if movies is not empty */}\n          <Col>\n            {movies.length ? (\n              <SearchResult\n                className=\"search-result\"\n                movies={movies}\n                search={search}\n                totalResults={totalResults}\n                loadMoreMovies={loadMoreMovies}\n                hasMore={hasMore}\n              />\n            ) : (\n              <div className=\"empty-keyword\">\n                <h1>Woops...</h1>\n                <h3>Please Enter KeyWord to Search Movie</h3>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./WatchListPage.styles.scss\";\n\nexport default function WatchListPage() {\n  return (\n    <div className=\"under-construction\">\n      <h1>Watch List Page</h1>\n      <h3>is Under Construction</h3>\n      <img\n        src=\"https://ulladulla-p.schools.nsw.gov.au/content/dam/doe/sws/schools/u/ulladulla-p/gallery/news-images/2019/websiteunderconstruction.jpg.thumb.1280.1280.jpg\"\n        alt=\"Under Construction\"\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./Header.styles.scss\";\nimport { BiCameraMovie } from \"react-icons/bi\";\nimport { NavLink, Link } from \"react-router-dom\";\n\nexport default function Header() {\n  return (\n    <div className=\"header\">\n      <nav>\n        <div className=\"logo\">\n          <BiCameraMovie className=\"logo\" />\n          <Link to=\"/\">\n            <span className=\"header\">Open Movie Database</span>\n          </Link>\n        </div>\n        <div className=\"links\">\n          <ul>\n            <li>\n              {/* NavLink - renders a navigation link with react-router-dom */}\n              <NavLink to=\"/\">Search Movie</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/watchlist\">WatchList Page</NavLink>\n            </li>\n            {/* watch list sidebar */}\n            {/* <li>\n              <WatchListData placement={\"end\"} className=\"watch-list-link\" />\n            </li> */}\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","import './App.scss';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport HomePage from './pages/HomePage/HomePage';\nimport WatchListPage from './pages/WatchList/WatchListPage';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './components/Header/Header'\n\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      {/* Use react-router-dom to manage dynamic routing between pages*/}\n      <Switch>\n        {/* Route - Renders a UI component by URL*/}\n        <Route exact path='/' component={HomePage} />\n        <Route path='/watchlist' component={WatchListPage} />\n      </Switch>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // BrowserRouter - wrap <App /> for managing routing \n  <React.StrictMode >\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}